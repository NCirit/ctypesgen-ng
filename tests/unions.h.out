import ctypes

libtest = ctypes.CDLL('libtest.so')


class union_simple(ctypes.Union):
    pass
union_simple._fields_ = [
    ('x', ctypes.c_int),
    ('y', ctypes.c_float),
]


class union_empty(ctypes.Union):
    pass


class union_nested(ctypes.Union):
    pass
union_nested._fields_ = [
    ('s', union_simple),
    ('z', ctypes.c_longlong),
]


class union_forward_declaration(ctypes.Union):
    pass

libtest.binary.restype = union_simple
libtest.binary.argtypes = [union_simple, union_simple]

libtest.binary2.restype = None
libtest.binary2.argtypes = [ctypes.POINTER(union_simple), ctypes.POINTER(union_simple)]


class union_bitty(ctypes.Union):
    pass
union_bitty._fields_ = [
    ('a', ctypes.c_int, 1),
    ('b', ctypes.c_int, 2),
    ('c', ctypes.c_int, 4),
    ('d', ctypes.c_int, 8),
    ('e', ctypes.c_int, 16),
]


class struct_tagged_union(ctypes.Structure):
    pass
struct_tagged_union._fields_ = [
    ('type', ctypes.c_int),
    ('u', union_simple),
]
